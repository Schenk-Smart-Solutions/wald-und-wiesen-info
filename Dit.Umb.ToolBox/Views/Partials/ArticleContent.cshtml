
@using Dit.Umb.Mutobo.Enum
@using Dit.Umb.Mutobo.Interfaces
@using Dit.Umb.Mutobo.Modules
@using Dit.Umb.Mutobo.PoCo

@model Dit.Umb.Mutobo.PageModels.ArticlePage

<div style="display: flex; justify-content: center; flex-direction: column">
    @if (!string.IsNullOrEmpty(Model.PageTitle))
    {
        <h2>@Model.PageTitle.ToUpper()</h2>
        <div style="background: url(/assets/img/oak-leaves.svg) repeat-x;
                    width: 50%;
                    height: 2em; justify-content: center;
                                      background-size: 3em 3em; background-position-y: center; margin: auto;"></div>
    }
    @if (!Model.HideAbstract && !string.IsNullOrEmpty(Model.Abstract))
    {
        <p style="font-family: var(--font-family)">@Model.Abstract</p>

    }


    @if (Model.EmotionImages != null && Model.EmotionImages.Any())
    {
        if (Model.EmotionImages.Count() < 2)
        {
            var image = Model.EmotionImages.FirstOrDefault();

            if (image != null)
            {
                @image.RenderWcPictureTag()
            }
        }
        else
        {
            var configService = (IConfigurationService)DependencyResolver.Current.GetService(typeof(IConfigurationService));
            @Html.Partial("~/Views/Partials/Slider.cshtml", new EmptySliderComponent()
            {
                Slides = Model.EmotionImages,
                GalleryType = EGalleryType.FullWidth,
                Width = 800,
                Height = 450,
            })
            ;
        }
    }

    @if (!string.IsNullOrEmpty(Model.MainContent))
    {
        <div>
            @Html.Raw(Model.MainContent)
        </div>
    }
</div>

